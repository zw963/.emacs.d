#!/usr/bin/env bash
#
# Usage:
#    compile <lang-name>
#    compile all
#    compile changed [since=origin/master]
#
# Examples:
#    compile rust
#    compile cpp
#
#    compile changed 0.10.7

set -euo pipefail

here=$(cd "$(dirname "$BASH_SOURCE")"; pwd)
PROJECT_ROOT=$(cd "$here/.."; pwd)

LANG=$1

# Parse named parameters.
POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        (-target)
            target="'$2"
            shift
            shift
            ;;
        (*)
            POSITIONAL+=("$1")
            shift
            ;;
    esac
done
target=${target:-nil}
if [ "$target" == "'" ]; then
    target=nil
fi

case $LANG in
    (all)
        code="(tree-sitter-langs-create-bundle nil $target)"
        ;;
    (changed)
        code="(tree-sitter-langs-compile-changed-or-all \"${POSITIONAL[1]:-origin/master}\" $target)"
        ;;
    (*)
        code="(tree-sitter-langs-compile '$LANG nil $target)"
esac

(
    cd "$PROJECT_ROOT"
    emacs -Q --batch \
          --directory . \
          --load tree-sitter-langs-build \
          --eval "$code"
)
